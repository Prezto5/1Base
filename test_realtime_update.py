#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π WebSocket.
–ò–∑–º–µ–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket.
"""

import asyncio
import asyncpg
import os
import random
import time
from datetime import datetime

async def test_realtime_updates():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    database_url = os.getenv("DATABASE_URL", "postgresql://antonuricin@localhost:5432/mydb")
    if "+asyncpg" in database_url:
        database_url = database_url.replace("+asyncpg", "")
    
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(database_url)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö product_variants
        variants = await conn.fetch("""
            SELECT pv.id, pv.price, pv.total_companies, p.base_name, r.name_nominative
            FROM product_variants pv
            JOIN products p ON pv.product_id = p.id
            JOIN regions r ON pv.region_id = r.id
            WHERE pv.is_active = true
            ORDER BY pv.id
            LIMIT 10
        """)
        
        if not variants:
            print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(variants)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        print("\n–°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:")
        for variant in variants:
            print(f"  ID: {variant['id']} | {variant['base_name']} - {variant['name_nominative']}")
            print(f"    –¶–µ–Ω–∞: {variant['price']} —Ä—É–±, –ö–æ–º–ø–∞–Ω–∏–π: {variant['total_companies']}")
        
        print("\n" + "="*60)
        print("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï REAL-TIME –û–ë–ù–û–í–õ–ï–ù–ò–ô")
        print("="*60)
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        while True:
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            variant = random.choice(variants)
            variant_id = variant['id']
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            new_price = round(random.uniform(1000, 5000), 2)
            new_total_companies = random.randint(500, 3000)
            new_companies_with_email = int(new_total_companies * random.uniform(0.6, 0.9))
            new_companies_with_phone = int(new_total_companies * random.uniform(0.8, 0.98))
            new_companies_with_site = int(new_total_companies * random.uniform(0.3, 0.6))
            new_companies_with_address = int(new_total_companies * random.uniform(0.9, 1.0))
            new_companies_with_activity = int(new_total_companies * random.uniform(0.7, 0.95))
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            timestamp = datetime.now().strftime("%H:%M:%S")
            print(f"\n[{timestamp}] üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç ID {variant_id}")
            print(f"  –ü—Ä–æ–¥—É–∫—Ç: {variant['base_name']} - {variant['name_nominative']}")
            print(f"  –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {variant['price']} —Ä—É–± ‚Üí –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {new_price} —Ä—É–±")
            print(f"  –°—Ç–∞—Ä–æ–µ –∫–æ–ª-–≤–æ –∫–æ–º–ø–∞–Ω–∏–π: {variant['total_companies']} ‚Üí –ù–æ–≤–æ–µ: {new_total_companies}")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º UPDATE –∑–∞–ø—Ä–æ—Å
            await conn.execute("""
                UPDATE product_variants 
                SET 
                    price = $1,
                    total_companies = $2,
                    companies_with_email = $3,
                    companies_with_phone = $4,
                    companies_with_site = $5,
                    companies_with_address = $6,
                    companies_with_activity = $7
                WHERE id = $8
            """, new_price, new_total_companies, new_companies_with_email, 
                 new_companies_with_phone, new_companies_with_site, 
                 new_companies_with_address, new_companies_with_activity, variant_id)
            
            print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –¢—Ä–∏–≥–≥–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–µ—à –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
            for i, v in enumerate(variants):
                if v['id'] == variant_id:
                    variants[i] = {
                        **v,
                        'price': new_price,
                        'total_companies': new_total_companies
                    }
                    break
            
            # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            print(f"  ‚è±Ô∏è –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º...")
            await asyncio.sleep(10)
            
    except KeyboardInterrupt:
        print("\n\nüõë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await conn.close()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    print("üß™ Real-Time Update Tester")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥")
    print("–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("\n" + "="*60)
    
    asyncio.run(test_realtime_updates()) 